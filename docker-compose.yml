version: "3"

networks:
  kafka-net:
    driver: bridge

services:
  zookeeper-server:
    image: "bitnami/zookeeper:3.7"
    networks:
      - kafka-net
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    volumes:
      - ./full-stack/zookeeper/data:/bitnami/zookeeper


  kafka-server1:
    image: "bitnami/kafka:3.4"
    networks:
      - kafka-net
    ports:
      - "9093:9093"
    environment:
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper-server:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka-server1:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      ALLOW_PLAINTEXT_LISTENER: yes
    volumes:
      - ./full-stack/kafka1/data:/bitnami/kafka
    depends_on:
      - zookeeper-server


  kafka-server2:
    image: "bitnami/kafka:3.4"
    networks:
      - kafka-net
    ports:
      - "9094:9094"
    environment:
      KAFKA_CFG_BROKER_ID: 2
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper-server:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka-server2:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      ALLOW_PLAINTEXT_LISTENER: yes
    volumes:
      - ./full-stack/kafka2/data:/bitnami/kafka
    depends_on:
      - kafka-server1
      - zookeeper-server

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka-server1:9092,kafka-server2:9092"
    depends_on:
      - kafka-server1
      - kafka-server2